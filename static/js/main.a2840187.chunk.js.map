{"version":3,"sources":["context/BacklogState.js","components/AddBacklog.js","components/ViewBacklog.js","App.js","reportWebVitals.js","index.js"],"names":["BacklogContext","createContext","BacklogState","props","_useState","useState","id","title","cards","name","stage","cid","v4","_useState2","Object","slicedToArray","backlog","setBacklog","react_default","a","createElement","Provider","value","children","AddBacklog","_useContext","useContext","_useContext2","backlogName","setBacklogName","autoComplete","onSubmit","e","preventDefault","newCard","getBacklogObject","filter","push","newState","map","obj","objectSpread","type","placeholder","onChange","input","currentTarget","test","className","disabled","length","ViewBacklog","state","setState","leftClick","backlogCard","card","newTodoCard","newState1","el","rightClick","Container","Row","Col","lg","Stack","direction","gap","key","index","onClick","alert","App","BacklogState_BacklogState","components_AddBacklog","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.a2840187.chunk.js","sourcesContent":["import React, { useState, createContext} from \"react\";\r\nimport { v4 } from 'uuid';\r\nexport const BacklogContext = createContext();\r\n\r\nexport const BacklogState = (props) =>{\r\n    const [backlog, setBacklog] = useState([\r\n        {\r\n            id: 1,\r\n            title: 'Backlog',\r\n            cards: [\r\n              { name: 'tasks 1', stage: 0, cid: v4() },\r\n              { name: 'tasks 2', stage: 0, cid: v4() }\r\n            ],\r\n          },\r\n          {\r\n            id: 2,\r\n            title: 'Todo',\r\n            cards: [],\r\n          },\r\n          {\r\n            id: 3,\r\n            title: 'InProgress',\r\n            cards: [],\r\n          },\r\n          {\r\n            id: 4,\r\n            title: 'Done',\r\n            cards: [],\r\n          }        \r\n    ]);\r\nreturn(\r\n    <BacklogContext.Provider value={[backlog, setBacklog]}>\r\n        {props.children}\r\n    </BacklogContext.Provider>  \r\n)\r\n}","import React, { useState, useContext } from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport { BacklogContext } from \"../context/BacklogState\";\r\n\r\nfunction AddBacklog() {\r\n  const [backlog, setBacklog] = useContext(BacklogContext);\r\n  const [backlogName, setBacklogName] = useState(\"\");\r\n\r\n  const onChange = (e) => {\r\n    const input = e.currentTarget.value;\r\n    if (/^[^!-\\/:-@\\[-`{-~]+$/.test(input) || input === \"\") {\r\n      setBacklogName(input);\r\n    }\r\n  };\r\n\r\n  const addName = (e) => {\r\n    e.preventDefault();\r\n    // create new card object that i want to add\r\n    const newCard = { name: backlogName, stage: 0, cid: v4() };\r\n    // get backlog object throght filter\r\n    const getBacklogObject = backlog.filter((backlog) => {\r\n      return backlog.id === 1;\r\n    });\r\n    // push new object in backlog card\r\n    getBacklogObject[0].cards.push(newCard);\r\n    // create newState for adding in Main object\r\n    const newState = backlog.map((obj) => {\r\n      if (obj.id === 1) {\r\n        return { ...obj, cards: getBacklogObject[0].cards };\r\n      }\r\n      return obj;\r\n    });\r\n\r\n    setBacklog(newState);\r\n    setBacklogName(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Add Backlog</h3>\r\n      <form autoComplete=\"off\" onSubmit={addName}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"backlog\"\r\n          id=\"backlog\"\r\n          placeholder=\"Enter Backlog Name\"\r\n          value={backlogName}\r\n          onChange={onChange}\r\n        />\r\n        <button\r\n          className=\"btn-primary\"\r\n          type=\"submit\"\r\n          id=\"submit\"\r\n          disabled={backlogName.length <= 2 ? true : false}\r\n        >\r\n          Add Backlog\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddBacklog;\r\n","import React, { useContext } from \"react\";\r\nimport { BacklogContext } from \"../context/BacklogState\";\r\nimport { Container, Row, Col, Stack } from \"react-bootstrap\";\r\n\r\nexport default function ViewBacklog() {\r\n  const [state, setState] = useContext(BacklogContext);\r\n\r\n  // ************************ Left Click Functionality *****************************************\r\n  const leftClick = (id, cid) => {\r\n        const backlogCard = state.map((state) => {\r\n          return state.id === id \r\n          ? state.cards.filter((card)=>{\r\n            if (card.cid === cid) {\r\n              return card;\r\n            }\r\n          }) : state;\r\n        });\r\n\r\n        const newTodoCard = { name: backlogCard[(id-1)][0].name, stage: (id-2), cid: backlogCard[(id-1)][0].cid };\r\n\r\n        const newState1 = state.map((obj) => {\r\n          if (obj.id === (id-1)) {\r\n            obj.cards.push(newTodoCard);\r\n            return { ...obj, cards: obj.cards };\r\n          }\r\n\r\n          if(obj.id === (id))\r\n          {\r\n                return { ...obj,\r\n                cards: obj.cards.filter((el) => {\r\n                  return el.cid !== cid;\r\n                })\r\n              }\r\n            }  \r\n\r\n          return obj;\r\n        });\r\n\r\n        setState(newState1);\r\n  };\r\n\r\n  // ************************ Right Click Functionality *****************************************\r\n  const rightClick = (id, cid) => {\r\n        const backlogCard = state.map((state) => {\r\n          return state.id === id \r\n          ? state.cards.filter((card)=>{\r\n            if (card.cid === cid) {\r\n              return card;\r\n            }\r\n          }) : state;\r\n        });\r\n\r\n        const newTodoCard = { name: backlogCard[(id-1)][0].name, stage: (id), cid: backlogCard[(id-1)][0].cid };\r\n\r\n        const newState1 = state.map((obj) => {\r\n          if (obj.id === (id+1)) {\r\n            obj.cards.push(newTodoCard);\r\n            return { ...obj, cards: obj.cards };\r\n          }\r\n\r\n          if(obj.id === id)\r\n          {\r\n                return { ...obj,\r\n                cards: obj.cards.filter((el) => {\r\n                  return el.cid !== cid;\r\n                })\r\n              }\r\n            }  \r\n\r\n          return obj;\r\n        });\r\n\r\n        setState(newState1);\r\n  };\r\n\r\n\r\n  const deleteTask = (id) => {\r\n    alert(id);\r\n  };\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row className=\"mt-2\">\r\n          <Col lg={12}>\r\n            <h3>View Backlog Details</h3>\r\n          </Col>\r\n          <Stack direction=\"horizontal\" gap={4}>\r\n            <Col lg={3} className=\"border p-1 text-center\">\r\n              Backlog\r\n            </Col>\r\n            <Col lg={3} className=\"border p-1 text-center\">\r\n              ToDo\r\n            </Col>\r\n            <Col lg={3} className=\"border p-1 text-center\">\r\n              InProgress\r\n            </Col>\r\n            <Col lg={3} className=\"border p-1 text-center\">\r\n              Done\r\n            </Col>\r\n          </Stack>\r\n          <Stack direction=\"horizontal\" gap={4}>\r\n            {state.map((state) => (\r\n              <Col lg={3} key={state.id} className=\"mt-3\">\r\n                {state.cards.map((cards,index) => (\r\n                  <div key={cards.cid}>\r\n                    <p>{cards.name}</p>\r\n                    <p>\r\n                      <button\r\n                        className=\"btn-primary mybtn\"\r\n                        onClick={() => leftClick(state.id, cards.cid)}\r\n                        disabled={state.id === 1 || state.id === 4 ? true : false}\r\n                      >\r\n                        {\"<\"}\r\n                      </button>\r\n                      <button\r\n                        className=\"btn-primary mybtn\"\r\n                        onClick={() => rightClick(state.id, cards.cid)}\r\n                        disabled={state.id === 4 ? true : false}\r\n                      >\r\n                        {\">\"}\r\n                      </button>\r\n                      <button\r\n                        className=\"btn-danger mybtn\"\r\n                        onClick={() => deleteTask(state.id, cards.cid)}\r\n                        disabled={state.id !== 1 ? true : false}\r\n                      >\r\n                        {\"x\"}\r\n                      </button>\r\n                    </p>\r\n                  </div>\r\n                ))}\r\n              </Col>\r\n            ))}\r\n          </Stack>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport AddBacklog from \"./components/AddBacklog\";\nimport { BacklogState } from \"./context/BacklogState\";\nimport ViewBacklog from \"./components/ViewBacklog\";\nfunction App() {\n  return (\n    <BacklogState>\n      <div> \n        <Container>\n          <Row className=\"mt-5\">\n            <Col lg={12}><AddBacklog /><hr></hr></Col>\n            <Col lg={12}><ViewBacklog /></Col>\n          </Row>\n        </Container>\n      </div>\n    </BacklogState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}